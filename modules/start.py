from telebot.async_telebot import AsyncTeleBot
from telebot import types
import config
from database import functions as database_functions


bot = AsyncTeleBot(f'{config.token}')
users = config.users


def make_markup_and_text(message, requests_new, requests_in_processing, requests_accepted, requests_declined):

    if message.chat.id in users:
        markup_inline = types.InlineKeyboardMarkup()
        markup_inline.add(types.InlineKeyboardButton(f'üîî –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ ({len(requests_new)})',
                                                    callback_data='Requests_new|0'))
        markup_inline.add(types.InlineKeyboardButton(f'üìù –ó–∞—è–≤–∫–∏ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ ({len(requests_in_processing)})',
                                                    callback_data='Requests_in_processing|0'))
        markup_inline.add(types.InlineKeyboardButton(f'üë®‚Äçüíª –ó–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ ({len(requests_accepted)})',
                                                    callback_data='Requests_accepted|0'))
        markup_inline.add(types.InlineKeyboardButton(f'üóë –ö–æ—Ä–∑–∏–Ω–∞ –∑–∞—è–≤–æ–∫ ({len(requests_declined)})',
                                                    callback_data='Requests_declined|0'))
        markup_inline.add(types.InlineKeyboardButton(f'üåÄ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É', callback_data='Main'))
        message_text = 'üì© –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ üì©'

    else:
        markup_inline = None
        message_text = 'ü§ó –ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞–∂–µ—Ç—Å—è —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É, –ø–æ–ª—É—á–∏—Ç–µ –≤–∞—à id —Å –ø–æ–º–æ—â—å—é ' \
                        '/recipient –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –≤ —Å–ø–∏—Å–æ–∫ ' \
                        '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'

    return markup_inline, message_text

async def send(message):

    database_functions.first_connect_from_user()
    requests_new = database_functions.get_requests_new()
    requests_in_processing = database_functions.get_requests_in_processing()
    requests_accepted = database_functions.get_requests_accepted()
    requests_declined = database_functions.get_requests_declined()

    markup_inline, message_text = make_markup_and_text(message, requests_new, requests_in_processing, 
                                               requests_accepted, requests_declined)

    await bot.send_message(message.chat.id, text=message_text, reply_markup=markup_inline)

async def edit(message):

    database_functions.first_connect_from_user()
    requests_new = database_functions.get_requests_new()
    requests_in_processing = database_functions.get_requests_in_processing()
    requests_accepted = database_functions.get_requests_accepted()
    requests_declined = database_functions.get_requests_declined()

    markup_inline, message_text = make_markup_and_text(message, requests_new, requests_in_processing, 
                                         requests_accepted, requests_declined)

    await bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=message_text)
    await bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id, reply_markup=markup_inline)